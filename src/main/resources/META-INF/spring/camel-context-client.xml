<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context -->

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<!-- client init factory -->
	<bean id="clientInitFactory" class="co.kr.init.client.ClientInitFactory" />

	<!-- test data make -->
	<bean id="getByteBuf" class="co.kr.vo.ByteBufFactory" init-method="getByteBuf" />
	<bean id="getString" class="co.kr.vo.StringFactory" init-method="getString" />
	<bean id="getByteArr" class="co.kr.vo.ByteArrFactory" init-method="getByteArr" />

	<!-- convert  -->
	<bean id="stringToByteBuf_Convert" class="co.kr.converter.StringToByteBuf" />

	<camelContext xmlns="http://camel.apache.org/schema/spring" >
		<!--
		 파일 폴링 후 네티 클라이언트로 보낸다.
		 option : delay:최초 바로 폴링한후 시간차
		          move :파일을 성공적으로 처리하면 하위 done폴더를 생성하고 backup한다.
		          idempotent : 이동하려는 done폴더에 이미 같은파일이 있으면 처리하지 않고 skip한다. 
		 -->
		<route>
			<from uri="file://fileBox?delay=10000&amp;move=done&amp;idempotent=true"/>
			<to   uri="direct:start" />
		</route>

		<route>
			<from uri="timer://BANK?repeatCount=1" />
			<bean ref="getString" />
			<to   uri="direct:start" />
		</route>

		<route>
			<from uri="direct:start" />
			<bean ref="stringToByteBuf_Convert" />
			<to   uri="netty4:tcp://localhost:22222?workerCount=1&amp;clientPipelineFactory=#clientInitFactory" />
		</route>

	</camelContext>

</beans>